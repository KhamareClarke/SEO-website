import { NextRequest, NextResponse } from 'next/server';
import nodemailer from 'nodemailer';

export const dynamic = 'force-dynamic';

export async function POST(request: NextRequest) {
  console.log('üìß API Route: send-audit-email called');
  
  try {
    const body = await request.json();
    console.log('üìß Request body:', body);
    
    const { name, email, phone, domain, timestamp } = body;

    // Validate required fields
    if (!name || !email || !phone || !domain) {
      console.log('üìß Validation failed - missing fields');
      return NextResponse.json(
        { error: 'Missing required fields' },
        { status: 400 }
      );
    }

    // Create email transporter
    const transporter = nodemailer.createTransport({
      service: 'gmail',
      auth: {
        user: process.env.EMAIL_USER || 'hamareclarke@gmail.com',
        pass: process.env.EMAIL_PASS || 'your-app-password'
      }
    });

    // Email content
    const mailOptions = {
      from: process.env.EMAIL_USER || 'hamareclarke@gmail.com',
      to: process.env.AUDIT_EMAIL || 'hamareclarke@gmail.com',
      subject: `New SEO Audit Request - ${domain}`,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #fbbf24; background: #1f2937; padding: 20px; margin: 0; text-align: center; border-radius: 8px 8px 0 0;">
            üîç New SEO Audit Request
          </h2>
          <div style="background: #f9fafb; padding: 30px; border-radius: 0 0 8px 8px;">
            <h3 style="color: #374151; margin-top: 0;">Contact Information</h3>
            <table style="width: 100%; border-collapse: collapse; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 1px 3px rgba(0,0,0,0.1);">
              <tr>
                <td style="padding: 12px 16px; border-bottom: 1px solid #e5e7eb; font-weight: bold; color: #374151; background: #f8fafc;">Name:</td>
                <td style="padding: 12px 16px; border-bottom: 1px solid #e5e7eb; color: #6b7280;">${name}</td>
              </tr>
              <tr>
                <td style="padding: 12px 16px; border-bottom: 1px solid #e5e7eb; font-weight: bold; color: #374151; background: #f8fafc;">Email:</td>
                <td style="padding: 12px 16px; border-bottom: 1px solid #e5e7eb; color: #6b7280;">${email}</td>
              </tr>
              <tr>
                <td style="padding: 12px 16px; border-bottom: 1px solid #e5e7eb; font-weight: bold; color: #374151; background: #f8fafc;">Phone:</td>
                <td style="padding: 12px 16px; border-bottom: 1px solid #e5e7eb; color: #6b7280;">${phone}</td>
              </tr>
              <tr>
                <td style="padding: 12px 16px; border-bottom: 1px solid #e5e7eb; font-weight: bold; color: #374151; background: #f8fafc;">Domain:</td>
                <td style="padding: 12px 16px; border-bottom: 1px solid #e5e7eb; color: #6b7280;">${domain}</td>
              </tr>
              <tr>
                <td style="padding: 12px 16px; font-weight: bold; color: #374151; background: #f8fafc;">Request Time:</td>
                <td style="padding: 12px 16px; color: #6b7280;">${new Date(timestamp).toLocaleString()}</td>
              </tr>
            </table>
            
            <div style="margin-top: 30px; padding: 20px; background: linear-gradient(135deg, #fef3c7, #fde68a); border-left: 4px solid #f59e0b; border-radius: 8px;">
              <p style="margin: 0; color: #92400e; font-weight: bold; font-size: 16px;">
                ‚ö° Action Required: Please process this audit request and send the report to the client.
              </p>
            </div>
            
            <div style="margin-top: 20px; text-align: center;">
              <a href="mailto:${email}" style="display: inline-block; background: #fbbf24; color: #1f2937; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: bold; margin-right: 10px;">
                Reply to Client
              </a>
              <a href="tel:${phone}" style="display: inline-block; background: #10b981; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: bold;">
                Call Client
              </a>
            </div>
          </div>
          <div style="background: #1f2937; padding: 20px; text-align: center; color: #9ca3af; border-radius: 0 0 8px 8px;">
            <p style="margin: 0;">Best regards,<br><strong>SEOInForce Assistant</strong></p>
            <p style="margin: 10px 0 0 0; font-size: 12px;">This email was automatically generated by the SEOInForce Assistant</p>
          </div>
        </div>
      `
    };

    // Send email
    try {
      const result = await transporter.sendMail(mailOptions);
      console.log('üìß Email sent successfully:', result.messageId);
      
      return NextResponse.json({ 
        success: true, 
        message: 'Audit request email sent successfully',
        messageId: result.messageId
      });
    } catch (emailError) {
      console.error('üìß Email sending failed:', emailError);
      
      // Fallback: log to console if email fails
      console.log('üìß FALLBACK - AUDIT EMAIL DATA:');
      console.log('=====================================');
      console.log(`To: hamareclarke@gmail.com`);
      console.log(`Subject: New SEO Audit Request - ${domain}`);
      console.log(`From: hamareclarke@gmail.com`);
      console.log('');
      console.log('Contact Information:');
      console.log(`- Name: ${name}`);
      console.log(`- Email: ${email}`);
      console.log(`- Phone: ${phone}`);
      console.log(`- Domain: ${domain}`);
      console.log(`- Request Time: ${new Date(timestamp).toLocaleString()}`);
      console.log('=====================================');
      
      return NextResponse.json({ 
        success: true, 
        message: 'Audit request logged (email failed, check console)',
        messageId: `audit-${Date.now()}`
      });
    }

  } catch (error) {
    console.error('üìß Error sending audit email:', error);
    return NextResponse.json(
      { error: 'Failed to send email', details: error instanceof Error ? error.message : 'Unknown error' },
      { status: 500 }
    );
  }
}
